/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaccia;

import parser.Gioco;

import IOSalvataggioGioco.IOFileStato;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.List;
import java.util.ListIterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

import javax.swing.text.StyledDocument;
import javax.swing.text.StyledEditorKit;
import parser.FeedbackOutput;
import parser.FeedbackOutput.TestoTipo;
import stato.StatoGioco;

/**
 *  Schermata principale del gioco, è la parte più Vicina all'utente del programma, si occupa di:
 *      -prendere e l'input e passarlo alle classi adibite alla sua gestione
 *      -ricevere l'output da fornire all'utente e stamparlo secondo lo stile richiesto
 *      -istanziare i pannelli opportuni ottenuti dal feedback delle classi che interpretano l'input
 *      -introdurre l'utente al gioco
 * 
 * @author Giuseppe
 */
public class SchermataPrincipale extends javax.swing.JFrame {

    private Gioco gioco;
    
    private final int TESTO_NORMALE = 1;
    private final int TESTO_EVIDENZIATO = 2;
    private final int TESTO_CORSIVO = 3;
    
    //utilizzato per contenere i pannelli da istanziare esterni
    private JPanel pannelloEsterno;
    
    public SchermataPrincipale() {
        initComponents();
        
        pannelloEsterno = null;
        bottonePannelloEsterno.setVisible(false);
        bottonePannelloEsterno.setEnabled(false);
        interfacciaTestuale.setEditorKit(new StyledEditorKit());
        StatoGioco statoAttuale = null;
        inputUtente.requestFocusInWindow();
        
        //il file iniziale viene creato e caricato ogni volta per sicurezza, considerando che pesa poco
        
        try{
            //crea ogni volta il filse statoIniziale.dat non sarebbe megli controllare  prima se esista?
            IOFileStato.istanziaStato();
            ObjectInputStream statoInput = new ObjectInputStream(new FileInputStream(new File("salvataggiGioco/statoIniziale.dat")));     
            statoAttuale = (StatoGioco) statoInput.readObject();
            gioco = new Gioco(statoAttuale.getComandi(), statoAttuale.getOggetti(), statoAttuale.getStopWords(),
                statoAttuale.getMappa(), statoAttuale.getGiocatore());
        }catch(FileNotFoundException ex){
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }catch(IOException | ClassNotFoundException ex){
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        aggiornaSfondo();
        scriviTerminaleTitolo(titolo());
        scriviTerminaleFeedbackCorsivo(introduzione());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pannelloSopraTerminale = new javax.swing.JPanel();
        contenitore = new javax.swing.JPanel();
        pannelloTerminale = new javax.swing.JPanel();
        pannelloScorrimento = new javax.swing.JScrollPane();
        interfacciaTestuale = new javax.swing.JEditorPane();
        inputUtente = new javax.swing.JTextField();
        bottonePannelloEsterno = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pannelloSopraTerminale.setOpaque(false);

        javax.swing.GroupLayout pannelloSopraTerminaleLayout = new javax.swing.GroupLayout(pannelloSopraTerminale);
        pannelloSopraTerminale.setLayout(pannelloSopraTerminaleLayout);
        pannelloSopraTerminaleLayout.setHorizontalGroup(
            pannelloSopraTerminaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 784, Short.MAX_VALUE)
        );
        pannelloSopraTerminaleLayout.setVerticalGroup(
            pannelloSopraTerminaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        contenitore.setOpaque(false);
        contenitore.setLayout(new javax.swing.OverlayLayout(contenitore));

        pannelloTerminale.setOpaque(false);

        pannelloScorrimento.setAutoscrolls(true);
        pannelloScorrimento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pannelloScorrimento.setFocusable(false);

        interfacciaTestuale.setEditable(false);
        interfacciaTestuale.setBackground(new java.awt.Color(0, 0, 0));
        interfacciaTestuale.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        interfacciaTestuale.setEditorKit(null);
        interfacciaTestuale.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        interfacciaTestuale.setForeground(new java.awt.Color(255, 255, 255));
        interfacciaTestuale.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        pannelloScorrimento.setViewportView(interfacciaTestuale);

        inputUtente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        inputUtente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputUtenteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pannelloTerminaleLayout = new javax.swing.GroupLayout(pannelloTerminale);
        pannelloTerminale.setLayout(pannelloTerminaleLayout);
        pannelloTerminaleLayout.setHorizontalGroup(
            pannelloTerminaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloTerminaleLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(pannelloTerminaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloTerminaleLayout.createSequentialGroup()
                        .addComponent(pannelloScorrimento, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloTerminaleLayout.createSequentialGroup()
                        .addComponent(inputUtente, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))))
        );
        pannelloTerminaleLayout.setVerticalGroup(
            pannelloTerminaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloTerminaleLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(pannelloScorrimento, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inputUtente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        contenitore.add(pannelloTerminale);

        bottonePannelloEsterno.setBackground(new java.awt.Color(204, 0, 51));
        bottonePannelloEsterno.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        bottonePannelloEsterno.setText("Torna al terminale");
        bottonePannelloEsterno.setMaximumSize(new java.awt.Dimension(72, 22));
        bottonePannelloEsterno.setMinimumSize(new java.awt.Dimension(72, 22));
        bottonePannelloEsterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottonePannelloEsternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenitore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(bottonePannelloEsterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pannelloSopraTerminale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(bottonePannelloEsterno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(contenitore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pannelloSopraTerminale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(409, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void inputUtenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputUtenteKeyPressed
        // TODO add your handling code here:
        pannelloScorrimento.setAutoscrolls(true);
        FeedbackOutput feedback = new FeedbackOutput();
        // controlla quale tasto è stato premuto e se l'input Utente è accessibile
        // in modo da evitare eventuali scritture mentre il player è in realtà su un altro pannello
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && inputUtente.isEnabled()){
            String messaggio = leggiInput();
            //passa agioco che lo passa al parser
            feedback = gioco.processaInput(messaggio);
            
            inputUtente.setText("");
            scriviTerminaleUtente("\n  " + messaggio);
            
            scriviTerminaleFeedback("~");
            if(feedback.getJPanel() == null){
                //scrivi feedback
                gestioneFeedback(feedback.getListaTesti());
            }else{
                //scrivi feedback e usa jpanel esterno
                gestioneFeedback(feedback.getListaTesti());
                gestionePannello(feedback.getJPanel());
            }
            scriviTerminaleFeedback("\n");
        }
    }//GEN-LAST:event_inputUtenteKeyPressed

    private void gestioneFeedback(List<TestoTipo> listaTesti){
        ListIterator<TestoTipo> iteratoreTesti = listaTesti.listIterator();
        TestoTipo coppiaFeedbackTipo;
        
        while (iteratoreTesti.hasNext()){
            coppiaFeedbackTipo = iteratoreTesti.next();
            if(null != coppiaFeedbackTipo.getTipo())switch (coppiaFeedbackTipo.getTipo()) {
                case TESTO_NORMALE -> scriviTerminaleFeedback(coppiaFeedbackTipo.getTesto());
                case TESTO_EVIDENZIATO -> scriviTerminaleFeedbackCiano(coppiaFeedbackTipo.getTesto());
                case TESTO_CORSIVO -> scriviTerminaleFeedbackCorsivo(coppiaFeedbackTipo.getTesto());
                default -> {
                }
            }
        }
    }
    
    //differenzia l'input utente dall'output del programma
    private void scriviTerminaleUtente(String messaggio){
         //inserisco il testo prendendo un documento che esiste di per se nel jEditorpane
        Document documento = interfacciaTestuale.getDocument();
        try {
            documento.insertString(documento.getLength(), messaggio + "\n", null);
            inputUtente.setText("");
        } catch (BadLocationException ex) {
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    //formato base per l'output del programma
    private void scriviTerminaleFeedback(String messaggio){
        StyledDocument documento = (StyledDocument) interfacciaTestuale.getDocument();
        SimpleAttributeSet setAttributi = new SimpleAttributeSet();
        StyleConstants.setForeground(setAttributi, new Color(0,238,0));
        try {
            documento.insertString(documento.getLength(), messaggio, setAttributi);
            inputUtente.setText("");
        } catch (BadLocationException ex) {
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //formato per le informazioni da far saltare all'occio dell'utente
    private void scriviTerminaleFeedbackCiano(String messaggio){
        StyledDocument documento = (StyledDocument) interfacciaTestuale.getDocument();
        SimpleAttributeSet setAttributi = new SimpleAttributeSet();
        StyleConstants.setForeground(setAttributi, new Color(25,229,230));
        
        try {
            
            documento.insertString(documento.getLength(), messaggio, setAttributi);
            inputUtente.setText("");
        } catch (BadLocationException ex) {
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void scriviTerminaleFeedbackCorsivo(String messaggio){
        StyledDocument documento = (StyledDocument) interfacciaTestuale.getDocument();
        SimpleAttributeSet setAttributi = new SimpleAttributeSet();
        StyleConstants.setItalic(setAttributi, rootPaneCheckingEnabled);
        
        try {
            documento.insertString(documento.getLength(), messaggio, setAttributi);
            inputUtente.setText("");
        } catch (BadLocationException ex) {
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //funzione puramente adibita alla creazione di un output adatto al titolo
    private void scriviTerminaleTitolo(String messaggio){
        StyledDocument documento = (StyledDocument) interfacciaTestuale.getDocument();
        SimpleAttributeSet setAttributi = new SimpleAttributeSet();
        StyleConstants.setFontSize(setAttributi, 30);
        StyleConstants.setBold(setAttributi, true);
        StyleConstants.setFontFamily(setAttributi, "Serif");
        
        try {
            documento.insertString(documento.getLength(), messaggio, setAttributi);
            inputUtente.setText("");
        } catch (BadLocationException ex) {
            Logger.getLogger(SchermataPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    //gestione dei pannelli esterni
    private void gestionePannello(JPanel pannello){
        pannelloEsterno = pannello;
        bottonePannelloEsterno.setVisible(true);
        bottonePannelloEsterno.setEnabled(true);
        contenitore.add(pannelloEsterno,1);
       
        pannelloEsterno.requestFocus();
        
        contenitore.setComponentZOrder(pannelloEsterno, 0);
        contenitore.setComponentZOrder(pannelloTerminale,1);
        contenitore.revalidate();
        contenitore.repaint();  
        pannelloTerminale.setVisible(false);
        inputUtente.setEnabled(false);
        pack();
        revalidate();
        repaint();
    }
    
    
    
    private void bottonePannelloEsternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottonePannelloEsternoActionPerformed
        // TODO add your handling code here:
        if(!pannelloEsterno.equals(null)){
            contenitore.remove(pannelloEsterno);
            
            pannelloTerminale.setVisible(true);
            inputUtente.setEnabled(true);
            
            contenitore.revalidate();
            contenitore.repaint();
            bottonePannelloEsterno.setVisible(false);
            bottonePannelloEsterno.setEnabled(false);
            inputUtente.requestFocus();
        }
    }//GEN-LAST:event_bottonePannelloEsternoActionPerformed

    private String leggiInput(){
        return inputUtente.getText();
    }
    
    
    
    private void aggiornaSfondo() {
        Color sfondo = getBackground();
        Thread coloreSfondo;
        coloreSfondo = new Thread(new ColoreSfondo(sfondo.getRed(), sfondo.getGreen(), sfondo.getBlue(),
                (Color colore) -> {
                    this.getContentPane().setBackground(colore);
                }));
        coloreSfondo.start();
    }
    
    
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchermataPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchermataPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchermataPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchermataPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SchermataPrincipale().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bottonePannelloEsterno;
    private javax.swing.JPanel contenitore;
    private javax.swing.JTextField inputUtente;
    private javax.swing.JEditorPane interfacciaTestuale;
    private javax.swing.JScrollPane pannelloScorrimento;
    private javax.swing.JPanel pannelloSopraTerminale;
    private javax.swing.JPanel pannelloTerminale;
    // End of variables declaration//GEN-END:variables

     
    
    private String titolo(){
        String testo;
        
        testo = """ 
                                             _______________
                                             .      Corriere      .
                                             ***************
                """;
        
        
        return testo;
    }
    
    private String introduzione(){
        String testo;
        
            testo = """
                                 Sei un corriere, un lavoro che può essere fastidioso quando capitano consegne fuori routine,
                        proprio come oggi. Ti trovi consegnare due pacchi ad una villa lontana diversi kilometri
                         da qualsiasi cittadina.
                        Appena entrato ti si chiude il cancello alle spalle,meglio trovare una via d'uscita al più presto.
                    
                        (usa NORD, EST, SUD, OVEST per muoverti, INFO per informazioni sulla stanza corrente, USA <oggetto> per interagire con alcuni oggetti,
                        AIUTO per altri comandi o problemi)
                    """;
        
        return testo;
    }

}
